/**
 * generated by Xtext 2.36.0
 */
package org.project.browserautomation.bad.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.project.browserautomation.bad.BadFactory;
import org.project.browserautomation.bad.BadPackage;
import org.project.browserautomation.bad.BoolString;
import org.project.browserautomation.bad.CheckExists;
import org.project.browserautomation.bad.CheckboxAction;
import org.project.browserautomation.bad.ClickOn;
import org.project.browserautomation.bad.ClickType;
import org.project.browserautomation.bad.ElemType;
import org.project.browserautomation.bad.FillField;
import org.project.browserautomation.bad.Instruction;
import org.project.browserautomation.bad.NavigateToUrl;
import org.project.browserautomation.bad.Program;
import org.project.browserautomation.bad.StoreElement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BadPackageImpl extends EPackageImpl implements BadPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass programEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass instructionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigateToUrlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass checkExistsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass clickOnEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass checkboxActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fillFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass storeElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum clickTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum elemTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum boolStringEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.project.browserautomation.bad.BadPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BadPackageImpl()
  {
    super(eNS_URI, BadFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BadPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BadPackage init()
  {
    if (isInited) return (BadPackage)EPackage.Registry.INSTANCE.getEPackage(BadPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBadPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BadPackageImpl theBadPackage = registeredBadPackage instanceof BadPackageImpl ? (BadPackageImpl)registeredBadPackage : new BadPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theBadPackage.createPackageContents();

    // Initialize created meta-data
    theBadPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBadPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BadPackage.eNS_URI, theBadPackage);
    return theBadPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProgram()
  {
    return programEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProgram_Instructions()
  {
    return (EReference)programEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInstruction()
  {
    return instructionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNavigateToUrl()
  {
    return navigateToUrlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNavigateToUrl_Url()
  {
    return (EAttribute)navigateToUrlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCheckExists()
  {
    return checkExistsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCheckExists_Type()
  {
    return (EAttribute)checkExistsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCheckExists_Id()
  {
    return (EAttribute)checkExistsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCheckExists_Varname()
  {
    return (EAttribute)checkExistsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getClickOn()
  {
    return clickOnEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClickOn_Type()
  {
    return (EAttribute)clickOnEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClickOn_Id()
  {
    return (EAttribute)clickOnEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClickOn_Varname()
  {
    return (EAttribute)clickOnEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClickOn_Pos_index()
  {
    return (EAttribute)clickOnEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClickOn_Id_combo()
  {
    return (EAttribute)clickOnEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClickOn_To_select()
  {
    return (EAttribute)clickOnEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCheckboxAction()
  {
    return checkboxActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCheckboxAction_Bool()
  {
    return (EAttribute)checkboxActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCheckboxAction_Actions()
  {
    return (EAttribute)checkboxActionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFillField()
  {
    return fillFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFillField_Id()
  {
    return (EAttribute)fillFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFillField_Value()
  {
    return (EAttribute)fillFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFillField_Varname()
  {
    return (EAttribute)fillFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStoreElement()
  {
    return storeElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStoreElement_Pos_index()
  {
    return (EAttribute)storeElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStoreElement_Id_from()
  {
    return (EAttribute)storeElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStoreElement_Prop_name()
  {
    return (EAttribute)storeElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStoreElement_Varname()
  {
    return (EAttribute)storeElementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getClickType()
  {
    return clickTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getElemType()
  {
    return elemTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBoolString()
  {
    return boolStringEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BadFactory getBadFactory()
  {
    return (BadFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    programEClass = createEClass(PROGRAM);
    createEReference(programEClass, PROGRAM__INSTRUCTIONS);

    instructionEClass = createEClass(INSTRUCTION);

    navigateToUrlEClass = createEClass(NAVIGATE_TO_URL);
    createEAttribute(navigateToUrlEClass, NAVIGATE_TO_URL__URL);

    checkExistsEClass = createEClass(CHECK_EXISTS);
    createEAttribute(checkExistsEClass, CHECK_EXISTS__TYPE);
    createEAttribute(checkExistsEClass, CHECK_EXISTS__ID);
    createEAttribute(checkExistsEClass, CHECK_EXISTS__VARNAME);

    clickOnEClass = createEClass(CLICK_ON);
    createEAttribute(clickOnEClass, CLICK_ON__TYPE);
    createEAttribute(clickOnEClass, CLICK_ON__ID);
    createEAttribute(clickOnEClass, CLICK_ON__VARNAME);
    createEAttribute(clickOnEClass, CLICK_ON__POS_INDEX);
    createEAttribute(clickOnEClass, CLICK_ON__ID_COMBO);
    createEAttribute(clickOnEClass, CLICK_ON__TO_SELECT);

    checkboxActionEClass = createEClass(CHECKBOX_ACTION);
    createEAttribute(checkboxActionEClass, CHECKBOX_ACTION__BOOL);
    createEAttribute(checkboxActionEClass, CHECKBOX_ACTION__ACTIONS);

    fillFieldEClass = createEClass(FILL_FIELD);
    createEAttribute(fillFieldEClass, FILL_FIELD__ID);
    createEAttribute(fillFieldEClass, FILL_FIELD__VALUE);
    createEAttribute(fillFieldEClass, FILL_FIELD__VARNAME);

    storeElementEClass = createEClass(STORE_ELEMENT);
    createEAttribute(storeElementEClass, STORE_ELEMENT__POS_INDEX);
    createEAttribute(storeElementEClass, STORE_ELEMENT__ID_FROM);
    createEAttribute(storeElementEClass, STORE_ELEMENT__PROP_NAME);
    createEAttribute(storeElementEClass, STORE_ELEMENT__VARNAME);

    // Create enums
    clickTypeEEnum = createEEnum(CLICK_TYPE);
    elemTypeEEnum = createEEnum(ELEM_TYPE);
    boolStringEEnum = createEEnum(BOOL_STRING);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    navigateToUrlEClass.getESuperTypes().add(this.getInstruction());
    checkExistsEClass.getESuperTypes().add(this.getInstruction());
    clickOnEClass.getESuperTypes().add(this.getInstruction());
    checkboxActionEClass.getESuperTypes().add(this.getInstruction());
    fillFieldEClass.getESuperTypes().add(this.getInstruction());
    storeElementEClass.getESuperTypes().add(this.getInstruction());

    // Initialize classes and features; add operations and parameters
    initEClass(programEClass, Program.class, "Program", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getProgram_Instructions(), this.getInstruction(), null, "instructions", null, 0, -1, Program.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(instructionEClass, Instruction.class, "Instruction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(navigateToUrlEClass, NavigateToUrl.class, "NavigateToUrl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNavigateToUrl_Url(), ecorePackage.getEString(), "url", null, 0, 1, NavigateToUrl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(checkExistsEClass, CheckExists.class, "CheckExists", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCheckExists_Type(), this.getElemType(), "type", null, 0, 1, CheckExists.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCheckExists_Id(), ecorePackage.getEString(), "id", null, 0, 1, CheckExists.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCheckExists_Varname(), ecorePackage.getEString(), "varname", null, 0, 1, CheckExists.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(clickOnEClass, ClickOn.class, "ClickOn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getClickOn_Type(), this.getClickType(), "type", null, 0, 1, ClickOn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClickOn_Id(), ecorePackage.getEString(), "id", null, 0, 1, ClickOn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClickOn_Varname(), ecorePackage.getEString(), "varname", null, 0, 1, ClickOn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClickOn_Pos_index(), ecorePackage.getEInt(), "pos_index", null, 0, 1, ClickOn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClickOn_Id_combo(), ecorePackage.getEString(), "id_combo", null, 0, 1, ClickOn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClickOn_To_select(), ecorePackage.getEString(), "to_select", null, 0, 1, ClickOn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(checkboxActionEClass, CheckboxAction.class, "CheckboxAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCheckboxAction_Bool(), this.getBoolString(), "bool", null, 0, 1, CheckboxAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCheckboxAction_Actions(), ecorePackage.getEString(), "actions", null, 0, -1, CheckboxAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fillFieldEClass, FillField.class, "FillField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFillField_Id(), ecorePackage.getEString(), "id", null, 0, 1, FillField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFillField_Value(), ecorePackage.getEString(), "value", null, 0, 1, FillField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFillField_Varname(), ecorePackage.getEString(), "varname", null, 0, 1, FillField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(storeElementEClass, StoreElement.class, "StoreElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStoreElement_Pos_index(), ecorePackage.getEInt(), "pos_index", null, 0, 1, StoreElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStoreElement_Id_from(), ecorePackage.getEString(), "id_from", null, 0, 1, StoreElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStoreElement_Prop_name(), ecorePackage.getEString(), "prop_name", null, 0, 1, StoreElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStoreElement_Varname(), ecorePackage.getEString(), "varname", null, 0, 1, StoreElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(clickTypeEEnum, ClickType.class, "ClickType");
    addEEnumLiteral(clickTypeEEnum, ClickType.BUTTON);
    addEEnumLiteral(clickTypeEEnum, ClickType.LINK);
    addEEnumLiteral(clickTypeEEnum, ClickType.IMAGE);
    addEEnumLiteral(clickTypeEEnum, ClickType.COMBO);

    initEEnum(elemTypeEEnum, ElemType.class, "ElemType");
    addEEnumLiteral(elemTypeEEnum, ElemType.LINK);
    addEEnumLiteral(elemTypeEEnum, ElemType.TEXT);

    initEEnum(boolStringEEnum, BoolString.class, "BoolString");
    addEEnumLiteral(boolStringEEnum, BoolString.TRUE);
    addEEnumLiteral(boolStringEEnum, BoolString.FALSE);

    // Create resource
    createResource(eNS_URI);
  }

} //BadPackageImpl
